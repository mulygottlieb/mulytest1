/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Yuval as PrismaYuval } from "@prisma/client";

export class YuvalServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.YuvalCountArgs, "select">): Promise<number> {
    return this.prisma.yuval.count(args);
  }

  async yuvals(args: Prisma.YuvalFindManyArgs): Promise<PrismaYuval[]> {
    return this.prisma.yuval.findMany(args);
  }
  async yuval(args: Prisma.YuvalFindUniqueArgs): Promise<PrismaYuval | null> {
    return this.prisma.yuval.findUnique(args);
  }
  async createYuval(args: Prisma.YuvalCreateArgs): Promise<PrismaYuval> {
    return this.prisma.yuval.create(args);
  }
  async updateYuval(args: Prisma.YuvalUpdateArgs): Promise<PrismaYuval> {
    return this.prisma.yuval.update(args);
  }
  async deleteYuval(args: Prisma.YuvalDeleteArgs): Promise<PrismaYuval> {
    return this.prisma.yuval.delete(args);
  }
}
