/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Mor as PrismaMor } from "@prisma/client";

export class MorServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MorCountArgs, "select">): Promise<number> {
    return this.prisma.mor.count(args);
  }

  async mors(args: Prisma.MorFindManyArgs): Promise<PrismaMor[]> {
    return this.prisma.mor.findMany(args);
  }
  async mor(args: Prisma.MorFindUniqueArgs): Promise<PrismaMor | null> {
    return this.prisma.mor.findUnique(args);
  }
  async createMor(args: Prisma.MorCreateArgs): Promise<PrismaMor> {
    return this.prisma.mor.create(args);
  }
  async updateMor(args: Prisma.MorUpdateArgs): Promise<PrismaMor> {
    return this.prisma.mor.update(args);
  }
  async deleteMor(args: Prisma.MorDeleteArgs): Promise<PrismaMor> {
    return this.prisma.mor.delete(args);
  }
}
